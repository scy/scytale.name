# This config snippet configures nginx to reverse proxy scytale.name running in a Docker container.

server {
	listen 80;
	server_name scytale.name;
	# Optionally, as soon as the Let's Encrypt challenges are done, this file will exist and SSL will activate.
	include /etc/nginx/letsencrypt-snippet.active[.]conf;

	location / {
		# Point this to the Docker container's Apache.
		proxy_pass http://localhost:8000;

		# Required to make Apache redirect to the correct place.
		proxy_set_header Host scytale.name:80;
	}
}

# Redirect all requests for scytale.de, www.scytale.de and www.scytale.name to scytale.name.
server {
	listen 80;
	server_name scytale.de www.scytale.de www.scytale.name;
	include /etc/nginx/letsencrypt-snippet.active[.]conf;
	return 301 http://scytale.name$request_uri;
}

# Redirect all requests for scy.name and www.scytale.name to scytale.name, but temporarily.
# I'm planning to host other things on scy.name in the future.
server {
	listen 80;
	server_name scy.name www.scy.name;
	include /etc/nginx/letsencrypt-snippet.active[.]conf;
	
	# This is the webfinger redirect that allows me to have @scy@scy.name as my Mastodon user name
	# while the instance runs at mastodon.scy.name.
	location = /.well-known/host-meta {
		return 307 https://mastodon.scy.name$request_uri;
	}
	
	location / {
		return 307 http://scytale.name$request_uri;
	}
}
